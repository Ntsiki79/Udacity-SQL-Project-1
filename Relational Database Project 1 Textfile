/* Question Set 1 Question 1*/
WITH family_category
AS (SELECT
  f.title film_title,
  c.name category_name
FROM film f
JOIN film_category fc
  ON f.film_id = fc.film_id
JOIN category c
  ON fc.category_id = c.category_id
  AND c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
JOIN inventory i
  ON f.film_id = i.film_id
JOIN rental r
  ON i.inventory_id = r.inventory_id)
SELECT DISTINCT
  film_title,
  category_name,
  COUNT(film_title) OVER (PARTITION BY film_title) AS rental_count
FROM family_category
ORDER BY 2, 1;

/* Question Set 1 Question 2*/
WITH t1
AS (SELECT
  f.title AS film_name,
  c.name AS category,
  f.rental_duration AS rental_duration,
  NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile
FROM film f
JOIN film_category fc
  ON f.film_id = fc.film_id
JOIN category c
  ON c.category_id = fc.category_id)
SELECT
  t1.film_name film_name,
  t1.category film_category,
  t1.rental_duration rental_duration,
  t1.standard_quartile standard_quartile
FROM t1
WHERE category IN ('Animation', 'Children', 'Classics', 'Family', 'Music')
ORDER BY rental_duration, standard_quartile;

/* Question Set 2 Question 1*/
SELECT
  date_part('year', rental_date) rent_year,
  date_part('month', rental_date) rent_month,
  i.store_id store,
  COUNT(*) rental_count
FROM inventory i
JOIN rental r
  ON i.inventory_id = r.inventory_id
GROUP BY 1,
         2,
         3
ORDER BY 1, 2;

/* Question Set 2 Question 2*/
WITH top_ten AS
(SELECT customer_id
FROM payment
GROUP BY 1
ORDER BY SUM(amount) DESC
LIMIT 10),
payment_summary AS
(SELECT
DATE_TRUNC('month', payment_date) AS pay_month,
first_name||' '||last_name AS full_name,
COUNT(*) AS paycount_per_month,
SUM(amount) AS pay_amount
FROM customer c
JOIN top_ten
ON c.customer_id = top_ten.customer_id
JOIN payment p
ON top_ten.customer_id = p.customer_id
GROUP BY 1, 2
ORDER BY 2, 1)
SELECT *, pay_amount - LAG(pay_amount) OVER (PARTITION BY
full_name ORDER BY pay_month) payment_differencial
FROM payment_summary;
